apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "iac-operator.fullname" . }}-controller-manager
  labels:
    control-plane: controller-manager
    {{- include "iac-operator.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      control-plane: controller-manager
      {{- include "iac-operator.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        control-plane: controller-manager
        {{- include "iac-operator.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "iac-operator.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
      - name: manager
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /manager
        args:
          - --leader-elect={{ .Values.operator.leaderElection.enabled }}
          - --metrics-bind-address=:{{ .Values.operator.metricsPort }}
          - --health-probe-bind-address=:{{ .Values.operator.healthPort }}
          {{- if .Values.webhook.enabled }}
          - --webhook-cert-path=/tmp/k8s-webhook-server/serving-certs
          {{- end }}
          {{- if .Values.operator.watchNamespace }}
          - --namespace={{ .Values.operator.watchNamespace }}
          {{- end }}
        env:
        - name: OPERATOR_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: LOG_LEVEL
          value: {{ .Values.operator.logLevel }}
        {{- range $key, $value := .Values.config.env }}
        - name: {{ $key }}
          value: {{ $value | quote }}
        {{- end }}
        ports:
        - containerPort: {{ .Values.operator.metricsPort }}
          name: metrics
          protocol: TCP
        - containerPort: {{ .Values.operator.healthPort }}
          name: health
          protocol: TCP
        {{- if .Values.api.enabled }}
        - containerPort: {{ .Values.api.port }}
          name: api
          protocol: TCP
        {{- end }}
        {{- if .Values.webhook.enabled }}
        - containerPort: {{ .Values.webhook.port }}
          name: webhook
          protocol: TCP
        {{- end }}
        livenessProbe:
          httpGet:
            path: /healthz
            port: health
          initialDelaySeconds: 15
          periodSeconds: 20
        readinessProbe:
          httpGet:
            path: /readyz
            port: health
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          {{- toYaml .Values.resources | nindent 10 }}
        securityContext:
          {{- toYaml .Values.securityContext | nindent 10 }}
        volumeMounts:
        {{- if .Values.webhook.enabled }}
        - mountPath: /tmp/k8s-webhook-server/serving-certs
          name: webhook-cert
          readOnly: true
        {{- end }}
        {{- with .Values.config.volumeMounts }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      terminationGracePeriodSeconds: 10
      volumes:
      {{- if .Values.webhook.enabled }}
      - name: webhook-cert
        secret:
          defaultMode: 420
          secretName: {{ .Values.webhook.certSecret }}
      {{- end }}
      {{- with .Values.config.volumes }}
      {{- toYaml . | nindent 6 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}